import functools

def require_role(allowed_roles):
    def decorator(func):
        @functools.wraps(func)
        def wrapper(user, *args, **kwargs):
            if user.get('role') in allowed_roles:
                return func(user, *args, **kwargs)
            else:
                print(f"–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.get('name')}")
                return None
        return wrapper
    return decorator


users = [
    {"name": "–ú–∏—Ö–∞–∏–ª", "role": "admin"},
    {"name": "–ê–Ω–¥—Ä–µ–π", "role": "moderator"},
    {"name": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "role": "editor"},
    {"name": "–û–ª—å–≥–∞", "role": "user"},
    {"name": "–ü–µ—Ç—Ä", "role": "guest"}
]


@require_role(["admin"])
def delete_database(user):
    print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}")

@require_role(["admin", "moderator"])
def kick_user(user, username):
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –≤—ã–≥–Ω–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {user['name']}")

@require_role(["admin", "moderator", "editor"])
def edit_article(user, article_title):
    print(f"–°—Ç–∞—Ç—å—è '{article_title}' –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}")

@require_role(["admin", "moderator", "editor", "user", "guest"])
def view_content(user, content):
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['name']} –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç: {content}")


for user in users:
    print(f"üßë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['name']} (—Ä–æ–ª—å: {user['role']})")
    
    print("–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞:")
    view_content(user, "–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    
    print("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏:")
    edit_article(user, "–ù–æ–≤–æ—Å—Ç–∏ Python")
    
    print("–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    kick_user(user, "–Ω–∞—Ä—É—à–∏—Ç–µ–ª—å")
    
    print("–£–¥–∞–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    delete_database(user)
    
    print("\n" + "=" * 50 + "\n")